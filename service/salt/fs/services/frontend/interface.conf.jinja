{% set trim_blocks=True -%}
server {
    listen [::]:80;
    return 301 https://$host$request_uri;
}
server {
  listen 443 ssl;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  server_name  _;
  client_max_body_size 500M;
  ssl_certificate /etc/letsencrypt/live/{{ pillar['core-domain-CN'] }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ pillar['core-domain-CN'] }}/privkey.pem;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;
  location / {
    include uwsgi_params;
    uwsgi_pass 127.0.0.1:{{ pillar['frontend_proxy_port'] }};
  }
  location /pgadmin4/ {
    proxy_set_header X-Script-Name /pgadmin4;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header Host $host;
{%- for host, hostinfo in salt['mine.get']('*', 'grains.items').items() -%}
{%- if 'server' in hostinfo -%}
{%- if hostinfo['server'] == 'unified' or hostinfo['server'] == 'database' -%}
{%- for ip in hostinfo['ipv4'] -%}
{%- if pillar.ip_network in ip %}
    proxy_pass http://{{ ip }}:{{ pillar['pgadmin_proxy_port'] }}/;
{%- endif -%}
{%- endfor -%}
{%- endif -%}
{%- endif -%}
{%- endfor %}
    proxy_redirect off;
  }
  location /media {
    root {{ pillar['frontend_path_root'] }}/interface;
  }
  location /static {
    root {{ pillar['frontend_path_root'] }}/interface;
  }
}

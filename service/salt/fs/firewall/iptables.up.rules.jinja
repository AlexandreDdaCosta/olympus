{% set hostname=grains['id'] -%}
{% set trim_blocks=True -%}
{# Template for IP tables set-up for all services.  Managed by the local supervisor. -#}
# IP tables generated for {{ hostname }} from local supervisor

*filter

# Global rules

# Drop traffic not explicitly allowed
:INPUT DROP
:OUTPUT ACCEPT

# Allow forwarding requests
-A FORWARD -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

# fail2ban SSH
:fail2ban-SSH - [0:0]
-A INPUT -p tcp -m tcp --dport 22 -j fail2ban-SSH 

# Allow loopback traffic
-A INPUT -i lo -j ACCEPT

# Accept inbound traffic for already established connections
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Allow all outbound traffic
-A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT

# Allow ping
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT

# Allow SSH
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT

# Server- and environment-specific rules

{%- if grains.get('server') -%}
{%- if grains.get('server') == 'interface' or grains.get('server') == 'unified' %}

# UI
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 443 -j ACCEPT

{%- endif -%}
{%- endif -%}
{%- if grains.get('server') -%}
{%- if grains.get('server') == 'supervisor' or grains.get('server') == 'unified' %}
{% for host, hostinfo in salt['mine.get']('*', 'grains.items').items() %}
{%- if 'server' in hostinfo -%}
{%- if hostinfo['server'] == 'interface'%}
# ({{ host }}) -- interface

{% for ip in hostinfo['ipv4'] %}
# Backend API
-A INPUT -p tcp -m state --state NEW -m tcp --dport 4443 -s {{ ip }} -j ACCEPT
# Postgresql
-A INPUT -p tcp -m state --state NEW -m tcp --dport 5432 -s {{ ip }} -j ACCEPT
{% endfor -%}
{%- elif hostinfo['server'] == 'unified' %}
# ({{ host }}) -- unified

{%- for ip in hostinfo['ipv4'] -%}
{%- if ip != '127.0.0.1' %}
# Backend API
-A INPUT -p tcp -m state --state NEW -m tcp --dport 4443 -s {{ ip }} -j ACCEPT
# MongoDB
-A INPUT -p tcp -m state --state NEW -m tcp --dport 27017 -s {{ ip }} -j ACCEPT
{% endif -%}
{%- endfor -%}
{%- elif hostinfo['server'] == 'worker' %}
# ({{ host }}) -- worker

{% for ip in hostinfo['ipv4'] %}
# Backend API
-A INPUT -p tcp -m state --state NEW -m tcp --dport 4443 -s {{ ip }} -j ACCEPT
# MongoDB
-A INPUT -p tcp -m state --state NEW -m tcp --dport 27017 -s {{ ip }} -j ACCEPT
{% endfor -%}
{%- endif -%}
{%- endif -%}
{%- endfor -%}
{%- endif -%}
{%- endif -%}

# Ban everything else

-A INPUT -j REJECT --reject-with icmp-host-prohibited 
-A FORWARD -j REJECT --reject-with icmp-host-prohibited 
-A fail2ban-SSH -j RETURN

COMMIT
